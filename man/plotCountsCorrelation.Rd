% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R,
%   R/plotCountsCorrelation-methods.R
\name{plotCountsCorrelation}
\alias{plotCountsCorrelation}
\alias{plotCountsCorrelation,matrix,matrix-method}
\title{Plot counts correlation}
\usage{
plotCountsCorrelation(x, y, ...)

\S4method{plotCountsCorrelation}{matrix,matrix}(
  x,
  y,
  i = NULL,
  j = NULL,
  color = getOption(x = "acid.color.discrete", default = getOption(x =
    "ggplot2.discrete.colour", default = AcidPlots::scale_color_synesthesia_d())),
  labels = list(title = NULL, subtitle = NULL, color = NULL, x = NULL, y = "counts"),
  .xname = getNameInParent(x),
  .yname = getNameInParent(y)
)
}
\arguments{
\item{x}{Object.}

\item{y}{Object.}

\item{i}{
    indices specifying elements to extract or replace.  Indices are
    \code{numeric} or \code{character} vectors or empty (missing) or
    \code{NULL}.  Numeric values are coerced to integer as by
    \code{\link[base]{as.integer}} (and hence truncated towards zero).
    Character vectors will be matched to the \code{\link[base]{names}} of the
    object (or for matrices/arrays, the \code{\link[base]{dimnames}}):
    see \sQuote{Character indices} below for further details.

    For \code{[}-indexing only: \code{i}, \code{j}, \code{\dots} can be
    logical vectors, indicating elements/slices to select.  Such vectors
    are recycled if necessary to match the corresponding extent.
    \code{i}, \code{j}, \code{\dots} can also be negative integers,
    indicating elements/slices to leave out of the selection.

    When indexing arrays by \code{[} a single argument \code{i} can be a
    matrix with as many columns as there are dimensions of \code{x}; the
    result is then a vector with elements corresponding to the sets of
    indices in each row of \code{i}.

    An index value of \code{NULL} is treated as if it were \code{integer(0)}.
  }

\item{j}{
    indices specifying elements to extract or replace.  Indices are
    \code{numeric} or \code{character} vectors or empty (missing) or
    \code{NULL}.  Numeric values are coerced to integer as by
    \code{\link[base]{as.integer}} (and hence truncated towards zero).
    Character vectors will be matched to the \code{\link[base]{names}} of the
    object (or for matrices/arrays, the \code{\link[base]{dimnames}}):
    see \sQuote{Character indices} below for further details.

    For \code{[}-indexing only: \code{i}, \code{j}, \code{\dots} can be
    logical vectors, indicating elements/slices to select.  Such vectors
    are recycled if necessary to match the corresponding extent.
    \code{i}, \code{j}, \code{\dots} can also be negative integers,
    indicating elements/slices to leave out of the selection.

    When indexing arrays by \code{[} a single argument \code{i} can be a
    matrix with as many columns as there are dimensions of \code{x}; the
    result is then a vector with elements corresponding to the sets of
    indices in each row of \code{i}.

    An index value of \code{NULL} is treated as if it were \code{integer(0)}.
  }

\item{color}{\code{ScaleDiscrete}.
Desired ggplot2 color scale. Must supply discrete values. When set \code{NULL},
the default ggplot2 color palette will be used. If manual color definitions
are desired, we recommend using \code{ggplot2::scale_color_manual()}.

To set the discrete color palette globally, use:\preformatted{options(acid.color.discrete = ggplot2::scale_color_viridis_d())
}}

\item{labels}{\code{list}.
ggplot2 labels.
See \code{\link[ggplot2:labs]{ggplot2::labs()}} for details.}

\item{.xname}{Name of object defined in \code{x}.
\emph{Not intended to be used directly.}}

\item{.yname}{Name of object defined in \code{y}.
\emph{Not intended to be used directly.}}

\item{...}{Additional arguments.}
}
\value{
Graphical output.
}
\description{
Compare feature expression correlation across two data sets.
}
\note{
Updated 2019-09-16.
}
\examples{
data(RangedSummarizedExperiment, package = "AcidTest")

## matrix ====
x <- basejump::assay(RangedSummarizedExperiment)
x <- x[seq_len(4L), seq_len(2L)]
y <- x * 2L
plotCountsCorrelation(x, y)
}
