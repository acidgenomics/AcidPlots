% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotQuantileHeatmap-methods.R
\name{plotQuantileHeatmap}
\alias{plotQuantileHeatmap}
\alias{plotQuantileHeatmap,SummarizedExperiment-method}
\alias{plotQuantileHeatmap,SingleCellExperiment-method}
\title{Quantile heatmap}
\usage{
plotQuantileHeatmap(object, ...)

\S4method{plotQuantileHeatmap}{SummarizedExperiment}(
  object,
  assay = 1L,
  interestingGroups = NULL,
  n = 10L,
  clusterRows = TRUE,
  clusterCols = TRUE,
  showRownames = isTRUE(nrow(object) <= 30L),
  showColnames = TRUE,
  treeheightRow = 50L,
  treeheightCol = 50L,
  color = getOption(x = "acid.heatmap.quantile.color", default = viridis::viridis),
  legendColor = getOption(x = "acid.heatmap.legend.color", default =
    acidplots::synesthesia),
  legend = FALSE,
  borderColor = NULL,
  title = NULL,
  convertGenesToSymbols = showRownames,
  ...
)

\S4method{plotQuantileHeatmap}{SingleCellExperiment}(object, ...)
}
\arguments{
\item{object}{Object.}

\item{assay}{\code{vector(1)}.
Assay name or index position.}

\item{interestingGroups}{\code{character}.
Groups of interest to use for visualization.
Corresponds to factors describing the columns of the object.}

\item{n}{\code{integer(1)}.
The number of quantile breaks to create.}

\item{clusterRows}{\code{logical(1)}.
Arrange with hierarchical clustering.}

\item{clusterCols}{\code{logical(1)}.
Arrange with hierarchical clustering.}

\item{showRownames}{\code{logical(1)}.
Show row or column names.}

\item{showColnames}{\code{logical(1)}.
Show row or column names.}

\item{treeheightRow}{\code{integer(1)}.
Size of the row and column dendrograms. Use \code{0} to disable.}

\item{treeheightCol}{\code{integer(1)}.
Size of the row and column dendrograms. Use \code{0} to disable.}

\item{color}{\code{function}, \code{character}, or \code{NULL}.
Hexadecimal color function or values to use for plot.

We generally recommend these hexadecimal functions from the viridis
package, in addition to our \code{\link[=synesthesia]{synesthesia()}} palette:
\itemize{
\item \code{viridis::viridis()}.
\item \code{viridis::inferno()}.
\item \code{viridis::magma()}.
\item \code{viridis::plasma()}.
}

Alternatively, colors can be defined manually using hexadecimal values
(e.g. \code{c("#FF0000", "#0000FF")}), but this is not generally recommended.
Refer to the RColorBrewer package for hexadecimal color palettes that may
be suitable. If set \code{NULL}, will use the default pheatmap colors.}

\item{legendColor}{\code{function} or \code{NULL}.
Hexadecimal color function to use for legend labels. Note that hexadecimal
values are not supported. If set \code{NULL}, will use the default pheatmap
colors.}

\item{legend}{\code{logical(1)}.
Show the color legend.}

\item{borderColor}{\code{character(1)} or \code{NULL}.
Border color.}

\item{title}{\code{character(1)}.
Title.}

\item{convertGenesToSymbols}{\code{logical(1)}.
Attempt to automatically convert gene identifiers to gene symbols.
Only applies when object contains mappings defined in \code{rowRanges}.}

\item{...}{Additional arguments.}
}
\value{
\code{pheatmap}.
}
\description{
Quantile heatmap
}
\note{
Updated 2020-08-05.
}
\examples{
data(
    RangedSummarizedExperiment,
    package = "acidtest"
)

## SummarizedExperiment ====
object <- RangedSummarizedExperiment
plotQuantileHeatmap(object)
}
