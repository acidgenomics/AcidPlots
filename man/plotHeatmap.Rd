% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotHeatmap-methods.R
\name{plotHeatmap}
\alias{plotHeatmap}
\alias{plotHeatmap,SummarizedExperiment-method}
\alias{plotHeatmap,SingleCellExperiment-method}
\title{Heatmap}
\usage{
plotHeatmap(object, ...)

\S4method{plotHeatmap}{SummarizedExperiment}(
  object,
  assay = 1L,
  interestingGroups = NULL,
  scale = c("row", "column", "none"),
  clusteringMethod = "ward.D2",
  clusterRows = TRUE,
  clusterCols = TRUE,
  showRownames = isTRUE(nrow(object) <= 50L),
  showColnames = TRUE,
  treeheightRow = 50L,
  treeheightCol = 50L,
  color = getOption(x = "acid.heatmap.color", default = acidplots::blueYellow),
  legendColor = getOption(x = "acid.heatmap.legend.color", default =
    acidplots::synesthesia),
  breaks = seq(from = -3L, to = 3L, by = 0.25),
  legendBreaks = seq(from = -3L, to = 3L, by = 1L),
  borderColor = NULL,
  title = NULL,
  convertGenesToSymbols = showRownames,
  ...
)

\S4method{plotHeatmap}{SingleCellExperiment}(object, ...)
}
\arguments{
\item{object}{Object.}

\item{assay}{\code{vector(1)}.
Assay name or index position.}

\item{interestingGroups}{\code{character}.
Groups of interest to use for visualization.
Corresponds to factors describing the columns of the object.}

\item{scale}{\code{character(1)}.
Whether the values should be centered and scaled in either the row or
column direction, or remain unscaled.}

\item{clusteringMethod}{\code{character(1)}.
Clustering method. Accepts the same values as \code{\link[stats:hclust]{hclust()}}.}

\item{clusterRows, clusterCols}{\code{logical(1)}.
Arrange with hierarchical clustering.}

\item{showRownames, showColnames}{\code{logical(1)}.
Show row or column names.}

\item{treeheightRow, treeheightCol}{\code{integer(1)}.
Size of the row and column dendrograms. Use \code{0} to disable.}

\item{color}{\code{function}, \code{character}, or \code{NULL}.
Hexadecimal color function or values to use for plot.

We generally recommend these hexadecimal functions from the viridis
package, in addition to our \code{\link[=synesthesia]{synesthesia()}} palette:
\itemize{
\item \code{viridis::viridis()}.
\item \code{viridis::inferno()}.
\item \code{viridis::magma()}.
\item \code{viridis::plasma()}.
}

Alternatively, colors can be defined manually using hexadecimal values
(e.g. \code{c("#FF0000", "#0000FF")}), but this is not generally recommended.
Refer to the RColorBrewer package for hexadecimal color palettes that may
be suitable. If set \code{NULL}, will use the default pheatmap colors.}

\item{legendColor}{\code{function} or \code{NULL}.
Hexadecimal color function to use for legend labels. Note that hexadecimal
values are not supported. If set \code{NULL}, will use the default pheatmap
colors.}

\item{breaks}{\code{numeric} or \code{NULL}.
A sequence of numbers that covers the range of values in the matrix. Must
be 1 element longer than the color vector, which is handled internally
automatically, differing from the behavior in pheatmap.}

\item{legendBreaks}{\code{numeric} or \code{NULL}.
Numeric vector of breakpoints for the color legend.}

\item{borderColor}{\code{character(1)} or \code{NULL}.
Border color.}

\item{title}{\code{character(1)}.
Title.}

\item{...}{Passthrough arguments to \code{\link[pheatmap:pheatmap]{pheatmap()}}.
The argument names must be formatted in camel case, not snake case.}
}
\value{
\code{pheatmap}.
}
\description{
Construct a simple heatmap.
}
\note{
Updated 2020-04-21.
}
\section{Scaling}{


Here we're scaling simply by calculating the standard score (z-score).
\itemize{
\item mu: mean.
\item sigma: standard deviation.
\item x: raw score (e.g. count matrix).
\item z: standard score (z-score).
}\preformatted{z = (x - mu) / sigma
}

See also:
\itemize{
\item \code{pheatmap:::scale_rows()}.
\item \code{scale()} for additional scaling approaches.
}
}

\section{Hierarchical clustering}{


Row- and column-wise hierarchical clustering is performed when \code{clusterRows}
and/or \code{clusterCols} are set to \code{TRUE}. Internally, this calls
\code{\link[stats:hclust]{hclust()}}, and defaults to the Ward method.

Automatic hierarchical clustering of rows and/or columns can error for some
datasets. When this occurs, you'll likely see this error:\preformatted{Error in hclust(d, method = method) :
NA/NaN/Inf in foreign function call
}

In this case, either set \code{clusterRows} and/or \code{clusterCols} to \code{FALSE}, or
you can attempt to pass an \code{hclust} object to these arguments. This is
recommended as an alternate approach to be used with
\code{\link[pheatmap:pheatmap]{pheatmap()}}, which is called internally by our
plotting code. Here's how this can be accomplished:\preformatted{mat <- assay(mat)
dist <- dist(mat)
hclust <- hclust(dist, method = "ward.D2")
}
}

\examples{
data(
    RangedSummarizedExperiment,
    package = "acidtest"
)

## SummarizedExperiment ====
object <- RangedSummarizedExperiment
## Row scaling requires non-zero rows.
object <- nonzeroRowsAndCols(object)

## Symmetric row-scaled breaks (recommended).
plotHeatmap(
    object,
    scale = "row",
    color = acidplots::blueYellow,
    breaks = seq(from = -2L, to = 2L, by = 0.25),
    legendBreaks = seq(from = -2L, to = 2L, by = 1L)
)

## Using custom hexadecimal color input.
color <- rev(RColorBrewer::brewer.pal(n = 11L, name = "PuOr"))
color <- grDevices::colorRampPalette(color)
plotHeatmap(
    object,
    scale = "row",
    color = color,
    breaks = seq(from = -2L, to = 2L, by = 0.25),
    legendBreaks = seq(from = -2L, to = 2L, by = 1L)
)
}
\seealso{
\itemize{
\item \code{pheatmap::pheatmap()}.
\item \code{RColorBrewer::brewer.pal()}.
\item \code{stats::cor()}.
\item \code{stats::hclust()}.
}
}
\author{
Michael Steinbaugh, Rory Kirchner
}
